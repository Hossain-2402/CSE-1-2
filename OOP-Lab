jdk file = 206 MB
Net-beans = 585 MB
Total = around 3 GB
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

jdk file = 206 MB
Net-beans = 585 MB
Total = around 3 GB
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  ---------
| Mark dist |
  ---------

attendance : 20
online : 50
final : 30

                                                                                                                         Lab-1
                                                                                                                        ------

 ----------
|Class Note|
 ----------

JDK packages JVM,JRE

# copy path address -> write "pushd <paste address>" 

# to compile :
    javac Hello.java
# to run :
    java Hello
   // here "Hello" is the name the class

# public = access modifier 
# "public Welcome{}" hole file "Welcome.java" likhe save korte hobe 
# c header file = java package

# "import java.util.Scanner" package for getting input

# getting input :
		Scanner sc = new Scanner(System.in);
		int a = sc.nextInt();
		System.out.println(a);



 ----------
|Class Work|
 ----------


import java.util.Scanner;

public class Hello{


	public static void main(String[] args){
		
//		System.out.println("Welcome To JAVA");
//-----------------------------------------------------------------
		
//		int a = 50;
//		System.out.println("The current number is : "+ a);
//-----------------------------------------------------------------
		
//		String name = "Hossain";
//		System.out.println("My name is : " + name);
//-----------------------------------------------------------------

//		int a = 10;
//		if(a%2 == 0){
//			System.out.println(a);
//		}
//		else{
//			System.out.println("Dumb");
//		}
//-----------------------------------------------------------------
		
//		for(int i=1;i<=10;i++){
//			System.out.println("This is the line number : "+i);
//		}
//-----------------------------------------------------------------

//		Scanner sc = new Scanner(System.in);
//		int a = sc.nextInt();
//		System.out.println(a);
//		
//		double b = sc.nextDouble();
//		System.out.println(b);
		
//		float c = sc.nextFloat();
//		System.out.println(c);


	}
}



                                                                                                                         Lab-2
                                                                                                                        ------

 ----------
|Class Note|
 ----------


# Java with ant > Java application
# To create new class : 
        click on the folder inside "Source packages" right click > New > Java class 

# Conventions : (Camel casing)
    class name      = public class ClassRep
    variable name   = studentId
    method name     = calculateGrade

# To create object:    
    Student s1 = new Student();

# "Student s" is a reference, not an object

# "new" keyword makes a memory 

# "Student()" is a constructor: initializes int to 0 and String to NULL

# 'one' class can have 'multiple' constructors

# Constructor : 
    - has no return type
    - constructor name = class name 




 ----------
|Class Work|
 ----------

    main:
    ----


        //        Student s;
        //        Student s1 = new Student();
        //        s1.name = "Hossain";
        //        s1.id = 17;
        //        
        //        s1.printName();
        //-----------------------------------------------------------------

        //        Student s;
        //        Student s1 = new Student("Hossain",17);
        //        
        //        s1.printName();
        //-----------------------------------------------------------------



        //        Student s = new Student();
        //        s.name = "Hossain";
        //        s.id = 17;
        //        

    class:
    -----
        String name;
        int id;
        
        Student(String newName, int newId){
            name = newName;
            id = newId;
        }
        
        Student(){
        }
        
        void printName(){
            System.out.println(name);
        }



        
                                                                                                                         Lab-3
                                                                                                                        ------

   ----------
 | Class note |
   ----------


   # private makes a variable/method unaccessable from the main class 
   # making the Constructor private, does not allow to create an object 
   # keep class,constructor "public"



   # The problems can be solved using the getter and setter methods


  ---------
| Main.java |
  ---------

    package gradedemo;
    import java.util.Scanner;

    /**
     *
     * @author AUST
     */
    public class GradeDemo {

        /**
         * @param args the command line arguments
         */
        public static void main(String[] args) {
            Scanner sc = new Scanner(System.in);
            
    //        Student s1 = new Student("Hossain",17);
    //        System.out.println(s1.name);
    //  ---------------------------------------

        
        



            
            
            
        }
        
    }


  ------------
| Student.java |
  ------------
  



    package gradedemo;

    /**
     *
     * @author AUST
     */
    public class Student {
        String name;
        int id;
        
        Student(){
        
        }
        
    //    Student(String name, int id){
    //        this.name = name;
    //        this.id = id;
    //    }   
    //    -------------------------------------------------------
        
        
        
        
    }




  ---------------
|  ShapeDemo.java |
  ---------------
  


    package shapedemp;
    import java.util.Scanner;
    /**
     *
     * @author AUST
     */
    public class ShapeDemp {

        /**
         * @param args the command line arguments
         */
        public static void main(String[] args) {
    //        Circle c = new Circle(12,"red");
    //        System.out.println(c.calculateArea());
    //        System.out.println(c.getRadius());
    //        
    //        c.setRadius(50);
    //        System.out.println(c.calculateArea());
    //        System.out.println(c.getRadius());
    //    -----------------------------------------------------------------------------




            Circle c = new Circle(12,"red");
            Circle c1 = new Circle(10,"black");
            
            
            c.setRadius(50);
            System.out.println(c1.calculateArea(c));
            
        }
        
    }



  -----------
| Circle.java |
  -----------
    
    package shapedemp;

    /**
     *
     * @author AUST
     */
    public class Circle {
        private double radius;
        private String color;
        
        Circle(){}
        
        Circle(double radius, String color){
            this.radius = radius;
            this.color = color;
        }
        
        
        public double getRadius(){
            return this.radius; 
        }
        
        public String getColor(){
            return this.color; 
        }
        
        
        public void setRadius(int radius){
            if(radius >= 0) this.radius = radius; 
            else this.radius = 1;
        }
        
        public void setColor(String color){
            this.color = color; 
        }
        
    //    
    //    public double calculateArea(Circle c1){
    //        
    //        return Math.PI*(c1.radius)*(c1.radius);
    //    }
        
        public double calculateArea(Circle c1){
            
            return Math.PI*(c1.radius)*(c1.radius);
        }
    }

                                                                                                                         Lab-4
                                                                                                                        ------
 ------------
| class note |
 ------------

	double score  = author.getReaderCount() / 5.00 + author.getBookCount() * 200.00;

	Reason of Type-casting:
		double size != int size
		double size > int size 

 -----------
| class code |
 -----------

Tulip:
-----

public class Tulip {
    private String color;
    private double height;
    
    Tulip(){
    
    }
    
    
    Tulip(String c, double h){
        
        color = c;
        height = h;
    
    }
    
    String getColor(){
        return color;
    }
    
    double getHeight(){
        return height;
    }
    
    void setColor(String c){
        color = c;
    }
    
    void setHeight(double h){
        height = h;
    }
    
    
}


NewTulip:
--------

public class NewTulip {
    public Tulip mixTulip(Tulip t1, Tulip t2){
        double avgHeight = (t1.getHeight() + t2.getHeight()) / 2.00;
        
        Tulip t3 = new Tulip();
        t3.setHeight(avgHeight);
        t3.setColor("Blue");
        
        return t3;
    }
}


MethodOverloading:
-----------------


    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        Overloading o1 = new Overloading();
        o1.test();
        o1.test(2);
        o1.test(2,4);
        o1.test(2.5);
        o1.test(2,2.5,3);
    }

Overloading:
-----------

public class Overloading {
    void test(){
        System.out.println("No Parameters");
    }
    
    void test(int a){
        System.out.println(a);
    }
    
    // This is not method overloading [not allowed]
//    double test(int b){
//        return b;
//    }
    
    void test(int a, int b){
        System.out.println(a+b);
    }
    
    void test(int a,int b, double c){
        System.out.println(a+b+c);
    }
    
    void test(int a,double b, int c){
        System.out.println(a+b+c);
    }
    
    void test(double a){
        System.out.println(a);
    }
}

                                                                                                                         Lab-5
                                                                                                                        ------


main class:
		/*
	 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
	 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Main.java to edit this template
	 */
	package classnote;
	import java.util.Scanner;
	
	/**
	 *
	 * @author AUST
	 */
	public class CLASSNOTE {
	
	    /**
	     * @param args the command line arguments
	     */
	    public static void main(String[] args) {
	//        Student.varsity = "Aust";
	//        Student s1 = new Student();
	//        
	//        Student s2 = new Student();
	//        
	//        s2.varsity = "BUET"; // makes the varsity variable to BUET for all the objects
	//        System.out.println(s2);
	//        
	//        Student.printStudentName();
	//        
	//-------------------------------------------------------------------------------------------------------------------------------
	//
	//           int[] arr = new int[10];
	//
	//           System.out.println(arr.length);
	//-------------------------------------------------------------------------------------------------------------------------------
	       
	//
	//            Student[] s_arr = new Student[10];
	//            s_arr[0] = new Student();
	
	
	//-------------------------------------------------------------------------------------------------------------------------------
	            
	//            Student[] s = new Student[10];
	//            
	//            for(int i=0;i<s.length;i++){
	//                s[i] = new Student("Hossain");
	//            }
	//
	//            StudentPrinter.printNames(s);
	
	//-------------------------------------------------------------------------------------------------------------------------------
	//
	//            Student[] arr ;
	//            Students s = new Students();
	//            arr = s.createAStudent(10);
	//            StudentPrinter.printNames(arr);
	
	    }
	    
	}
	
Student:
	/*
	 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
	 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
	 */
	package classnote;
	
	/**
	 *
	 * @author AUST
	 */
	public class Student {
	    String name;
	    int id;
	    static String varsity; // this value is "same" for "all the objects" of this class
	    
	    Student(){
	        System.out.println("Printing the name : " + name);
	    }
	    Student(String name){
	        this.name = name;
	    }
	    
	    static void printStudentName(){
	        System.out.println("BUET");
	        //System.out.println(name); // not allowed
	    }
	    void getId(){
	        System.out.println(id+" " +varsity);
	    }
	    
	    
	}
StudentPrinter:
	
	/*
	 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
	 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
	 */
	package classnote;
	
	/**
	 *
	 * @author AUST
	 */
	public class StudentPrinter {
	    static void printNames(Student[] s){
	        for(int i=0;i<s.length;i++){
	            System.out.println(s[i].name + " ");
	        }
	    }
	}


Students:

	/*
	 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
	 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
	 */
	package classnote;
	
	/**
	 *
	 * @author AUST
	 */
	public class Students {
	    
	    Student[] createAStudent(int size){
	        
	        
	        Student[] new_s = new Student[size];
	        
	        for(int i=0;i<size;i++){
	            new_s[i] = new Student();
	            new_s[i].name = "Mr.";
	        }
	        return new_s;
	    }
	}


                                                                                                                         Lab-6
                                                                                                                        ------


Main:
----
	
	public class ONLINE_52 {
	
	    /**
	     * @param args the command line arguments
	     */
	    public static void main(String[] args) {
	        Scanner sc = new Scanner(System.in);
	        
	        Rectangle rect = new Rectangle(5,10, true, "Red"); // prints: Shape \n Rectangle
	        
	        rect.printArea();
	        System.out.println(rect.toString());
	    }
	    
	}
	
Shape: 
-----
	public class Shape {
	    private boolean filled;
	    private String color;
	
	//    public Shape() {
	//        System.out.println("Shape");
	//    }
	
	    public Shape(boolean filled, String color) {
	        this.filled = filled;
	        this.color = color;
	    }
	
	    public boolean isFilled() {
	        return filled;
	    }
	
	    public String getColor() {
	        return color;
	    }
	
	    public void setFilled(boolean filled) {
	        this.filled = filled;
	    }
	
	    public void setColor(String color) {
	        this.color = color;
	    }
	    
	    public void printArea(){
	        System.out.println("Area cannot be calculated");
	    }
	    public String toString(){
	        String output = "a";
	        return output;
	    }
	   
	    
	    
	}

Rectangle:
----------
	public class Rectangle extends Shape {
	    private double height;
	    private double width;
	
	    public Rectangle(double height, double width, boolean filled, String color) {
	        //super(true, "Red"); // Has to be in the first line 
	        super(filled, "Red");
	        this.height = height;
	        this.width = width;
	        System.out.println("Rectangle");
	    }
	    
	    @Override
	      public void printArea(){
	          System.out.println("Area: " + height * width);
	    }
	    
	      
	}

	

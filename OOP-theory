                                                                            Lec-1
                                                                            -----


Books:
 	Java : The complete Reference, 11th edition [Theoritical ]
		-Herbert schildt
	Head First Java, 2nd Edition
		-Kathy Sierra

Classroom code : cpzm2j7p



# source code ---> compiler -----> machine code 

# C++: Hello.c 	 ---> compiler ---> Hello.exe

# java: Hello.java ---> compiler  ---> Hello.class(byte code) ---> JVM [Java virtual machine] ---> output 

# compile once, run everywhere



                                                                            Lec-2
                                                                            -----
# JVM's drawback : "speed" kom hoy. Because it goes through some extra steps

# Encapsulation :
	Binds data and code.
	It enables the security of the data and code. 

# Inheritance :
	Inherits attributes from one class to another.
	Less code. 

# Polymorphism :
	One interface multiple methods.
	A single interface can control multiple operations.
	If a method substitutes multiple method's funciton. 

* fabs() = makes absolute value for "float" datatype
* labs() = makes absolute value for "long" datatype


# Class and Object :
  ````````````````

	one class -> multiple object 


	Student s1 = new Student("Hossain", 17, 1.1); // here 's1' is an object 



                                                                            Lec-3
                                                                            -----

# The class and and object has to indicate the same "physical thing"




# Class:
	- A class is a template for an object
	- Define a new data type



# Syntax : 
	
	class classname{
		type-instance variable1;
		.
		.
		.
		type-instance variableN;


		type methodname1(parameter-list){

		}
		.
		.
		.
		.
		type methodnameN(parameter-list){
			
		}

	}

	# Example :
		
		Class:
		------
		class Vechicle{
			int engine;
			int top_speed;

			int move(engine){
				....
			}
		}

		Object:
		-------
		Vechicle car = new Vehicle();




# Everything(code/manipulation) in java has to be inside a METHOD


class Demo{
		public static void main(String args[]){
				Box matchBox = new Box();
				matchBox.width = 2;
				matchBox.depth = 1;
				matchBox.height = 1.5;
		}
}



H.W : make an object of Box class 
